@model IEnumerable<InventoryManagement.Models.CustomerPurchase>

@{
    ViewData["Title"] = "Index";
}
<html>
<head>
    <title>SignalR Page Refresh</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

    
</head>
<body>
    <h1>Page will refresh when the server sends a signal.</h1>
    <h1>Customer Purchase</h1>
    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ProductId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StoreId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UnitCost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateUser)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdateUser)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StoreId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UnitCost)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreateTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreateUser)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdateTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdateUser)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.CusPurchaseId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.CusPurchaseId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.CusPurchaseId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/myhub")
            .build();

        connection.on("ReceiveRefresh", function () {
            location.reload();
        });

        connection.start().catch(err => console.error(err.toString()));
    </script>
</body>
<h1>Customer Purchase</h1>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StoreId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitCost)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdateUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StoreId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitCost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdateUser)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CusPurchaseId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.CusPurchaseId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.CusPurchaseId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
</html>